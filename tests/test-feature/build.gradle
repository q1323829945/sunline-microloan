plugins {
    id 'java'
}

ext {
    cucumberVersion = "7.3.3"
    restAssuredVersion = "5.1.1"
    junitJupiterVersion = "5.8.2"
    jacksonVersion = "2.13.2"
}

dependencies {
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.boot:spring-boot-starter-web"
    testImplementation "com.fasterxml.jackson.module:jackson-module-kotlin:${jacksonVersion}"
    testImplementation "io.cucumber:cucumber-java:${cucumberVersion}"
    testImplementation "io.cucumber:cucumber-junit:${cucumberVersion}"
    testImplementation "io.cucumber:cucumber-spring:${cucumberVersion}"
    testImplementation "io.cucumber:cucumber-core:${cucumberVersion}"
    testImplementation "io.rest-assured:rest-assured:${restAssuredVersion}"
    testImplementation "io.rest-assured:xml-path:${restAssuredVersion}"
    testImplementation "io.rest-assured:json-path:${restAssuredVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
}

test {
    useJUnitPlatform()
    systemProperty("cucumber.junit-platform.naming-strategy", "long")
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

task cucumber() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['-p',
                    'pretty',
                    '-p',
                    'html:build/cucumber-report/html/cucumber.html',
                    '-p',
                    'json:build/cucumber-report/json/cucumber.json',
                    '-p',
                    'junit:build/cucumber-report/junit/cucumber.xml',
                    '-g',
                    'cn.sunline.saas.test.steps',
                    '-t',
                    '@Test'
            ]
        }
    }
}